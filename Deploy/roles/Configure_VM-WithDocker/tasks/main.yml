---
    - name: Ensure aptitude is present (for dependency resolution)
      ansible.builtin.apt:
        name: aptitude
        state: present
        update_cache: yes
      register: aptitude_install_result
      until: aptitude_install_result is succeeded
      retries: 5

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600 # Cache valid for 1 hour to avoid redundant updates

    - name: Wait for a few seconds (adjust as needed)
      ansible.builtin.wait_for:
        timeout: 30  # Wait for 10 seconds

    - name: Upgrade all packages to the latest version
      ansible.builtin.apt:
        upgrade: dist

    - name: Install required packages.
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - net-tools
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
        - gnupg-agent
        - autoconf
        - dpkg-dev
        - file
        - g++
        - gcc
        - libc-dev
        - make
        - pkg-config
        - re2c
        - wget
        - git
        - nfs-common
        - nano
        - qemu-guest-agent

    - name: Create mount point directory
      ansible.builtin.file:
        path: /mnt/NAS  # Replace with the desired mount point
        state: directory

    - name: Mount NFS share  
      ansible.builtin.mount:
        src: "{{ nfs_server }}:/mnt/nas/Backups"  # Replace with the NFS server and share path
        path: /mnt/NAS  # Replace with the mount point
        fstype: nfs
        opts: defaults
        state: mounted

    - name: Start qemu-guest-agent service
      systemd:
        name: qemu-guest-agent
        state: started
      tags:
        - start

    - name: Enable qemu-guest-agent service for auto-start
      systemd:
        name: qemu-guest-agent
        enabled: yes
      tags:
        - enable

    - name: Add Docker GPG apt Key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu/ {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: true
      notify: Restart Docker  # Notify the handler if Docker is installed or updated

    - name: Ensure docker group exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ DockerUser }}"
        groups: docker
        append: yes

    - name: Install Docker module for Python
      ansible.builtin.pip:
        name: docker
        version: "6.1.3"

    - name: Install Docker module for Python
      ansible.builtin.pip:
        name: docker-compose
        version: "1.29.2"

    - name: Install latest Docker Compose
      ansible.builtin.get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create Docker-Compose symlink (if necessary)
      ansible.builtin.file:
        src: /usr/local/bin/docker-compose
        dest: /usr/bin/docker-compose
        state: link
        force: no

    #- name: Add private registry (if needed)
    #  ansible.builtin.template:
    #    src: daemon.j2
    #    dest: /etc/docker/daemon.json
    #    mode: '0644'
